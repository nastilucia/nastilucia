du[3] = u[131] - u[130] +  2  * u[129]
u[147] = (p[29] *  ( (u[127] +  297)  /  297)  )  * (u[146] / u[145]) 
u[106] = p[2] * exp(-p[1]  *  (t  -  1980))  *  IfElse.ifelse(t  >  2022, exp(-p[3]  *  (t  -  2022)),  1) 
u[107] = u[108] * u[106] /  1000 
u[109] =  withlookup(t,  [(1980.0,  0.009),  (2020.0,  0.009),  (2099.27,  0.0)]) 
u[110] = u[109] + u[107]
u[111] = p[5] / p[4]
du[1] = u[110] - u[112]
u[112] = u[1] / p[6]
u[113] = u[1] / p[7]
u[114] =  withlookup(t,  [(1980.0,  0.43),  (2000.0,  0.64),  (2010.0,  0.73),  (2020.0,  0.8),  (2100.0,  1.0)]) 
u[115] = u[113] * u[114]
u[116] = p[8] * exp(-p[10]  *  (t  -  1980))  *  IfElse.ifelse(t  >  2022, exp(-p[9]  *  (t  -  2022)),  1) 
u[117] = u[118] * u[116] /  1000 
u[119] =  withlookup(t,  [(1980.0,  0.19),  (2020.0,  0.19),  (2100.0,  0.19)]) 
u[120] = u[119] + u[117]
u[121] = p[11] / p[4]
du[2] = u[120] - u[122]
u[122] = u[2] / p[12]
u[123] = u[2] / p[13]
u[124] =  withlookup(t,  [(1980.0,  0.82),  (2000.0,  0.94),  (2020.0,  1.01),  (2100.0,  1.1)]) 
u[125] = u[123] * u[124]
u[126] =  IfElse.ifelse(t  >  2022,  1  + p[15] * (u[127] / p[14] -  1),  1) 
u[128] = p[16] * u[126]
u[129] = u[122] * p[17]
u[130] = (u[3] - p[18])  / u[128]
u[131] = u[134] + u[132] - u[133]
u[135] = (u[131] / u[136])  *  1000 
u[137] = u[133] * p[19]
u[139] = u[3] / p[21]
u[140] =  withlookup(t,  [(1980.0,  0.0032),  (1990.0,  0.0041),  (2000.0,  0.0046),  (2020.0,  0.0051),  (2100.0,  0.006)]) 
u[141] = u[139] * u[140]
u[142] =  withlookup(t,  [(1980.0,  0.18),  (2000.0,  0.36),  (2020.0,  0.39),  (2050.0,  0.37),  (2100.0,  0.0)]) 
u[143] = u[141] + u[142] + u[125] + u[115]
u[144] = u[131] * p[24] + u[120] * p[23] + u[110] * p[22]
u[145] = (p[28] * p[25] + (p[27] - p[28])  * p[26])  / p[27]
u[146] = (u[4] * p[25] + (p[27] - u[4])  * p[26])  / p[27]
u[148] = u[5] * u[147]
u[149] = p[30] * (u[127] / p[31]) 
u[150] = u[149] / p[32]
u[151] = u[150] * p[34] * p[35] * p[33]
u[152] = u[4] * u[149]
du[4] =  - u[152]
u[153] = u[4] *  100 
u[154] = p[36] *  (1  + p[37] * (u[127] / p[31] -  1)  ) 
u[155] = p[38] *  (1  + p[39] * (u[154] / p[36] -  1)  ) 
u[156] = u[143] + u[155]
u[157] = (u[156] * p[27])  *  31.5  /  1000 
u[127] = p[31] + (u[5] - p[41])  * p[40]
u[158] =  withlookup( u[127],  [(0.0,  1.0),  (1.2,  4.8),  (2.0,  8.6),  (2.9,  14.0),  (5.2,  40.0)]) 
u[159] = p[42] *  ( (u[127] +  287)  /  287  ) 
u[160] = u[5] * u[159]
du[5] = u[157] - u[151] - u[160] - u[148]
du[6] = (u[127]) / p[43]
u[161] = u[162] + u[163]
u[164] = u[161] / u[165]
u[166] =  min(1, p[44])  +  ramp(t, (p[46] - p[44])  /  42,  1980,  2022)  +  ramp(t, (p[45] - p[46])  /  78,  2022,  2100) 
u[167] =  pulse(t,  2022,  1)  * u[9] * p[47]
u[168] = u[172] - u[170] + u[171] - u[169]
u[163] = u[174] + u[175] - u[173]
u[162] = u[176] + u[178] - u[177]
u[179] = u[168] / u[180]
u[181] = u[168] / u[165]
u[182] = u[181] + u[183] + u[184]
u[185] =  IfElse.ifelse(t  >  2022, p[49] + p[48] + p[50],  0)  * u[165]
du[7] = (u[186]) / p[51]
u[187] =  IfElse.ifelse(t  >  2022, u[188] * p[52],  0) 
du[8] = (u[189]) / p[51]
u[190] = u[191] - u[163]
du[9] = u[173] - u[167] - u[175]
u[192] = u[9] / u[165]
u[186] = u[185] + u[187]
u[189] = p[54] +  IfElse.ifelse(t  >  2022, p[53],  0) 
u[193] = (u[174] + u[175])  / u[165]
u[194] = u[197] + u[195] + u[169] + u[170] + u[196]
u[198] = u[194] / u[165]
u[174] = u[9] * u[199]
u[200] = u[10] - u[201]
u[173] =  max(0, (u[202] - u[9])  / p[55])  +  step(t, p[56],  2022)  * u[165]
u[191] = (u[197] + u[195] + u[169] + u[170] + u[196])  - u[203] + u[204]
u[205] = u[191] / u[165]
u[175] = u[9] / p[57]
u[201] = u[10] * p[58]
u[206] = u[201] + u[200]
u[183] = u[206] / u[165]
u[196] = u[165] *  IfElse.ifelse(t  >  2022,  ramp(t, p[59] / u[138],  2022,  2020  + u[138]),  0) 
u[207] = u[208] / u[209]
u[210] = u[207] / p[60]
u[211] = u[166] * u[165] *  (1  - u[44]) 
u[212] = p[61] * u[165] * u[44]
u[202] = u[165] * p[62]
u[213] = u[214] * p[63]
u[171] = u[11] * u[215]
u[215] =  1  - u[216]
u[217] = u[208]
u[218] = u[165] *  (1  - u[44]) 
u[208] = u[218] - u[195]
u[219] = u[11] - u[171]
u[216] = p[64] *  (1  + p[65] * (u[69] / p[66] -  1)) 
u[195] = u[211] + u[7] * p[67]
u[220] = u[195] / u[218]
du[10] = (u[190]) / p[68]
du[11] = (u[217]) / p[69]
du[12] = (u[221]) / p[70]
u[184] = u[222] / u[165]
u[204] = u[170] + u[169]
u[169] = u[171] * p[71]
u[170] = u[172] * p[71]
u[203] = (u[197] + u[195] + u[169] + u[170] + u[196])  * u[8]
u[223] = u[221] + u[190] + u[217] - u[204]
u[222] = u[219] + u[224]
u[172] = u[12] * p[72]
u[221] = u[209] - u[162]
du[13] = u[177] - u[178]
u[225] = u[12] / u[43]
u[226] = u[162] / u[209]
u[214] = u[165] * u[44]
u[209] = u[214] - u[197] + u[203]
u[176] = u[13] * u[227]
u[197] = u[212] + u[7] *  (1  - p[67]) 
u[228] = u[197] / u[214]
u[177] =  max(0, (u[213] - u[13])  / p[73]) 
u[178] = u[13] / p[74]
u[229] = u[13] / u[209]
u[224] = u[12] - u[172]
u[230] = u[231] * p[75]
u[232] = p[76] *  (1  - exp(- ( u[233] /  10)  )  ) 
u[234] = (u[232] /  1000)  * u[180] *  (1  - u[235]) 
u[235] = p[78] +  ramp(t, (p[77] - p[78])  / u[138],  2022,  2022  + u[138]) 
u[134] = u[236] + u[234]
u[236] = u[237] * (u[238] /  1000)  *  (1  - u[235]) 
u[239] = (u[134] / u[180])  *  1000 
u[240] = p[19] * u[241]
u[241] = u[235] * (u[234] + u[236])  /  (1  - u[235]) 
u[238] =  2.8  * exp(p[79]  *  (t  -  1980)) 
du[14] = u[242]
u[242] = p[80] *  0  +  step(t, p[80],  2022) 
u[243] =  withlookup( u[233],  [(0.0,  0.0),  (10.0,  4.0),  (20.0,  7.0),  (30.0,  9.0),  (50.0,  12.0),  (65.0,  13.0)]) 
u[244] =  withlookup( u[233],  [(0.0,  0.3),  (15.0,  2.0),  (25.0,  3.1),  (35.0,  4.0),  (50.0,  5.0)]) 
u[247] = p[84] +  ramp(t, (p[83] - p[84])  /  42,  1980,  2022)  +  ramp(t, (p[82] - p[83])  / u[138],  2022,  2022  + u[138]) 
u[248] = u[247] * u[246]
u[249] = (p[85] /  1000)  * u[248]
u[250] = u[248] * p[86]
u[237] = u[251] + u[252]
du[15] = u[258] - u[259]
u[258] =  max(0, (u[257] / p[91])  + (u[259]) 
u[260] = u[258]
du[16] = u[260]
u[261] =  log(2)  +  log( u[16] / p[93]) 
u[262] =  (1  - p[94])  ** u[261]
u[263] = p[95] * u[262]
u[264] = u[263] * u[258]
u[265] = p[96] * u[266]
u[267] = u[264] + u[265]
u[268] = p[97] * u[269]
u[270] = p[98] * u[271]
u[272] = u[268] + u[270]
u[273] = u[272] + u[267] + u[230]
u[266] = u[15] * p[90]
u[274] = u[266] * p[99] / p[100]
u[275] = u[274] * p[101]
u[276] = p[102] + u[275]
u[277] = p[104] * p[103]
u[278] = u[266] / u[277] + u[276] / p[105]
u[279] = u[277] / p[105]
u[280] = u[237] / p[105]
u[281] = u[266] + u[231]
u[269] =  max(0, u[284]) 
du[17] = u[269] - u[285]
u[286] = p[108] * u[287]
u[288] = u[282] / u[17]
u[287] =  1  + p[109] * (u[288] / p[106])  -  1) 
u[271] = u[17] * u[288]
u[289] =  withlookup(t,  [(1980.0,  75.0),  (2000.0,  310.0),  (2020.0,  310.0),  (2098.9,  310.0)]) 
u[231] = u[289] * p[110]
u[290] = u[271] + u[231] + u[266]
u[291] = u[290] / u[253]
u[292] = (u[271] + u[231])  / u[290]
u[293] = u[251] + u[290] / u[279] + u[276]
u[294] = u[293] / u[180]
u[252] = u[271] / u[279]
u[295] = (u[245] * p[111] /  1000)  * p[112]
u[296] = (u[246] * p[113] /  1000)  * p[112]
u[297] = (u[251] * p[113])  /  1000 
u[298] = u[290] * p[114]
u[299] = u[245] * p[114]
u[300] = u[295] + u[296] + u[299]
u[301] = u[300] / u[136]
u[302] = u[297] + u[273] + u[298] + u[249] + u[240] + u[137]
u[303] = u[302] / u[300]
u[304] = u[302] / u[136]
u[305] =  IfElse.ifelse(t  >  2022, (u[302] - u[300])  / u[136],  0) 
u[306] = u[18] + u[307]
u[308] = p[117] + p[116] + p[115] + u[307]
du[18] = (u[309] + p[115]) / p[118]
du[19] = u[310]
u[310] = (u[311] - u[19])  / p[119]
du[20] = (u[21]) / p[120]
u[199] = u[309]
u[311] = p[117] *  (1  + p[121] * (u[21] / p[123] -  1)  + p[124] * (u[22] / p[122] -  1)) 
u[307] =  0.02  *  (1  + p[125] * (u[52] /  0.03  -  1)) 
du[21] = (u[312]) / p[126]
du[22] = (u[313]) / p[127]
u[314] = u[199] + u[20]
u[309] = u[19] + p[116]
u[227] = u[18]
u[315] = (u[316] *  (1  - u[319])  * u[28] + p[128] * u[319])  * u[318] * u[317]
u[320] =  1  - exp(-u[321] exp(-FFLR / p[129]) 
u[322] =  268  - p[130]
du[23] = u[323]
u[324] =  withlookup(t,  [(1980.0,  0.0),  (1990.0,  0.0),  (2000.0,  0.0),  (2020.0,  0.0),  (2100.0,  0.0)]) 
u[325] =  IfElse.ifelse(t  >  2022,  1  - p[131] *  ramp(t,  (1  -  0)  /  78,  2022,  2100),  1) 
u[326] =  (1  - p[132])  ** u[327]
u[328] = u[25] * (u[329] /  1000)  * u[318] * u[317]
u[329] =  1.6  * u[330]
u[132] = u[332] - u[328] - u[331]
u[318] =  IfElse.ifelse(t  >  2022,  1  + p[133] * (u[139] / p[134] -  1),  1) 
u[332] = (u[333] + u[334])  * p[135] )  /  1000 
u[335] = u[108] * p[136] /  1000 
u[336] = p[137] * u[136] + u[337] + u[335]
u[337] = (u[338] * u[339])  /  1000 
u[340] = u[341] / u[342]
u[343] = u[324] * p[138]
u[344] = (u[345] + u[346] + u[343]) 
u[334] =  IfElse.ifelse( u[25] >  0, u[24] * u[347],  0)  * u[320] * u[325]
u[347] =  1  /  200  + p[139] * (u[348] -  1) 
du[24] = u[334] - u[323] - u[349]
u[323] = u[24] * u[350]
u[118] = u[315] * u[24]
u[341] = u[118] *  (1  + u[351]) 
u[352] = u[341] / u[180]
u[353] = u[354] * u[28]
u[355] = p[128] * u[24] * u[319]
u[351] =  ramp(t, p[140] / u[138],  2022,  2022  + u[138]) 
u[361] = u[337] - u[362]
u[363] = u[361] / u[136]
u[331] = u[339] * p[141] /  1000 
u[338] = p[142] * u[326]
u[330] =  IfElse.ifelse(t  >  2022,  1  + p[131] *  ramp(t, (p[143] -  1)  /  78,  2022,  2100),  1) 
u[362] = (u[322] /  1000)  * u[339] * p[136]
u[364] =  1  + p[144] * (u[365] / p[130] -  1) 
u[346] = u[366] * p[145]
u[108] = u[24] *  (1  - u[319])  * u[365] /  1000 
u[367] = u[368] / p[146]
u[321] =  max(0, u[25] /  inits[:FOLA]) 
u[369] =  max(1,  1  + p[147] * (u[321] -  TFFLR)) 
u[359] =  ramp(t, p[148] / u[138],  2022,  2022  + u[138]) 
u[368] = u[24] * u[108]
du[25] = u[370] - u[334]
u[371] = exp(p[149]  *  (t  -  1980)) 
u[319] =  ramp(t, p[150] / u[138],  2022,  2020  + u[138]) 
u[372] = exp(p[152]  *  (t  -  1980))  *  IfElse.ifelse(t  >  2022, exp(p[151]  *  (t  -  2022)),  1) 
u[365] = u[373] / u[371]
u[374] = (u[108] / u[180])  *  1000 
u[375] = u[376] +  0  * u[139] -  0  * u[127]
u[376] =  14  * u[318] * u[317]
du[26] = u[377]
u[378] = u[180] * p[153]
u[379] =  IfElse.ifelse(t  >  2022,  1  - p[131] *  ramp(t,  (1  -  0)  /  78,  2022,  2100),  1) 
u[350] = p[154] * u[364] * u[379]
u[380] = u[333] + u[334]
u[381] = u[323] + u[349]
u[327] =  log( (u[339] + p[155])  / p[155])  /  0.693 
u[370] = u[333] *  (1  - p[156]) 
u[377] = u[333] * p[156]
du[27] =  - u[377]
u[333] = u[27] * u[382] * u[383]
u[382] = p[157] * u[369]
u[383] =  IfElse.ifelse(t  >  2022,  1  - p[131] *  ramp(t,  (1  -  0)  /  78,  2022,  2100),  1) 
u[348] = u[340] /  (1  + p[158]) 
u[384] = u[26] * u[375] /  1000 
u[339] = u[24] * u[319]
u[366] = u[357] - u[385]
u[385] =  min( u[357], u[384]) 
u[386] = (u[385] + u[366] *  min(1, u[340] ))  *  1000  / u[180]
u[354] =  0  + p[159] * (u[365] / p[130] -  1) 
du[28] = u[353]
u[387] = u[27] + u[25]
u[373] =  withlookup( u[316],  [(1.0,  0.0),  (2.0,  40.0),  (2.5,  50.0),  (3.0,  60.0),  (3.5,  70.0),  (4.5,  100.0),  (6.5,  200.0),  (10.0,  600.0)]) 
u[388] = u[389] * u[180] /  1000 
u[345] = (u[388] - u[390])  / u[372]
u[391] = u[345] *  1000  / u[180]
u[389] =  withlookup( u[233],  [(0.0,  400.0),  (6.1,  680.0),  (8.7,  780.0),  (13.9,  950.0),  (20.0,  1050.0),  (30.0,  1150.0),  (40.0,  1250.0),  (60.0,  1350.0),  (100.0,  1550.0)]) 
u[390] =  (  ( (u[360] /  1000)  * u[180])  - u[385])  * p[145]
u[360] =  withlookup( u[233],  [(0.0,  0.0),  (6.1,  6.0),  (8.8,  8.5),  (14.0,  13.0),  (30.0,  27.0),  (40.0,  32.0),  (50.0,  33.0),  (100.0,  25.0)]) 
u[349] =  max(0, (u[378] - u[29])  / p[160]) 
du[29] = u[349]
u[317] =  IfElse.ifelse(t  >  2022,  1  + p[161] * (u[127] / p[162] -  1),  1) 
u[392] = u[393] * u[30]
u[394] = u[33] * u[312]
du[30] = u[392]
du[31] = (u[223]) / p[168]
u[136] = u[399] * p[163]
u[400] = u[32] / u[35]
du[32] = u[399] - u[395]
u[312] = p[170] * (u[34] / p[169] -  1) 
u[165] = u[401]
u[399] = u[402] * u[36] / p[171]
du[33] = u[394]
u[396] =  1 
du[34] = ((u[400] / p[172])) / p[173]
u[393] =  0  + p[174] * (u[34] / p[175] -  1) 
du[35] = (u[395]) / p[176]
u[401] = u[395] * p[163]
du[36] = (u[398]) / p[177]
u[403] = u[41] * u[404]
u[404] = u[39] / p[178]
u[405] =  inits[:NHW]  / p[179]
u[406] = u[407] * u[38]
u[408] = u[409] * u[37]
u[410] = (u[412] - u[43])  / u[411]
u[413] = u[44] * u[414]
u[415] = u[41] * u[414]
du[37] = u[408]
u[416] =  max(0,  1  + p[180] * (u[233] / p[66] -  1)) 
u[417] =  ramp(t, p[181] / u[138],  2022,  2022  + u[138]) 
u[411] = p[182] /  3 
u[418] =  1  + p[183] * (u[233] / p[66] -  1) 
u[419] =  1  + p[184] * (u[44] /  inits[:WSO]  -  1) 
u[420] = u[421] - u[422]
u[423] = (u[399] * p[185])  / u[424]
u[424] = u[43] * u[404]
u[425] =  inits[:WF]  * u[405]
du[38] = (u[420]) / p[186]
u[426] = u[44] * p[187]
du[39] = ( * u[418]) / p[188]
u[421] = p[189] *  (1  + p[190] * (u[44] /  inits[:WSO]  -  1))  + u[417]
u[427] = u[37] * u[42]
u[412] = (u[428] / u[427])  * p[178]
u[429] = u[38] *  (1  - u[40]) 
u[422] = p[192] *  (1  + p[191] * (u[40] / p[192] -  1)) 
du[40] = (u[313])
u[409] = p[193] * u[416]
u[414] =  withlookup( u[40] / p[192],  [(0.0,  0.06),  (0.5,  0.02),  (1.0,  0.0),  (1.5,  -0.007),  (2.0,  -0.01)]) 
u[431] = p[182] /  3 
u[432] =  max(0, u[406] - u[43]) 
u[430] = p[182] /  3 
u[313] = u[432] / u[406]
u[407] = u[433]
du[41] = u[415] - u[434]
u[435] = u[41] / u[423]
du[42] = (u[419])
du[43] = u[410]
u[434] = u[41] * u[436]
u[436] = u[312] *  (1  - p[194]) 
du[44] = u[413] - u[426]
u[437] = u[336] + u[302]
u[438] = u[437]
u[439] =  1  -  (1  /  (1  + exp(-u[440] exp(-LK * (u[233] -  14)))) 
u[441] =  1  + p[195] * (u[207] /  0.5  -  1) 
u[440] = p[196] * u[441]
u[442] = u[180] * u[439]
u[443] =  ( (u[233] - u[45])  / u[45])  / p[197]
du[45] = (u[233]) / p[197]
u[444] = u[222] + p[198]
u[445] = u[48] / p[199]
u[446] = u[49] / p[200]
u[447] =  max( (u[448] + u[449] * u[136])  / u[450],  0) 
u[451] =  max( (u[200] + u[452] * u[136])  / u[450],  0) 
u[453] = u[46] / u[454]
u[455] = u[47] / u[456]
u[450] = p[201] * u[457]
du[46] = u[445] - u[453]
du[47] = u[446] - u[455]
u[458] = u[445] / u[46]
du[48] = u[447] - u[445]
u[459] = (p[203] / p[204])  * p[199] * p[202]
du[49] = u[451] - u[446]
u[460] = (p[205] / u[461])  * p[200] * p[202]
u[462] = (u[463] - u[50])  * u[458]
du[50] = u[462]
u[448] = u[444] * u[51]
u[456] = u[461]
u[461] =  15  * u[464]
u[449] =  IfElse.ifelse(t  >  2022, p[206],  0) 
u[452] =  IfElse.ifelse(t  >  2022,  0.01  + p[207],  0.01) 
u[457] =  IfElse.ifelse(t  >  2022,  1  + p[208] * (u[127] / p[162] -  1),  1) 
u[464] =  IfElse.ifelse(t  >  2022,  1  + p[209] * (u[127] / p[162] -  1),  1) 
u[428] = u[46] + u[47]
u[465] =  1  + p[210] * (u[306] / u[308] -  1) 
u[466] = u[223] / u[467]
u[468] =  1  + p[211] * (u[54] / p[212] -  1) 
u[469] =  1  + p[213] * (u[54] / p[212] -  1) 
du[51] = (p[214] * u[470] * (u[471] + u[465] + u[468]) /  3 ) / p[215]
u[470] =  max( p[216],  1  + p[217] * (u[233] / p[66] -  1)) 
u[472] =  withlookup( u[233] / p[66],  [(0.0,  1.0),  (1.0,  1.0),  (2.0,  0.85),  (2.1,  0.84),  (4.0,  0.65),  (8.0,  0.55),  (16.0,  0.5)]) 
u[473] = (u[448] + u[200])  / u[136]
u[454] = (p[204] * u[464])  / u[469]
du[52] = ((u[402] - u[53]) / u[53])
du[53] = (u[402])
u[467] = u[402] * p[185]
u[402] = p[218] *  ( (u[46] + u[47])  / (p[203] + p[205])  )  ** p[221] * (u[424] / p[220])  ** p[219] * (u[50]) 
du[54] = (u[466]) / p[222]
u[471] =  1  + p[223] * (u[435] /  inits[:WSO]  -  1) 
du[55] = u[475] - u[474]
du[56] = u[474] - u[476]
u[433] = u[56] + u[57] + u[58] - u[477]
du[57] = u[476] - u[478]
du[58] = u[478] - u[479]
u[480] = u[475] / u[180]
u[475] = u[56] * p[225] * (u[481] / p[224]) 
u[482] = p[226] * u[483]
u[483] =  ramp(t, p[231] / u[138],  2022,  2022  + u[138]) 
u[499] =  ramp(t, (p[232] -  inits[:EPA])  / u[138],  2022,  22022  + u[138]) 
du[69] =  -  / p[233]
u[497] =  IfElse.ifelse( p[234] >  0,  IfElse.ifelse(t  >  2022,  1  +  ramp(t, (p[235] -  1)  /  78,  2022,  2100),  1),  1) 
u[233] = u[136] / u[180]
u[500] = (p[236] - (p[236] -  inits[:LE])  * exp(-p[238]  * (u[69] -  inits[:EGDPP])))  *  (1  + p[237] * (u[69] -  inits[:EGDPP])))  * u[502] * u[501]
u[486] = u[500] -  60 
u[501] =  IfElse.ifelse( p[234] >  0,  IfElse.ifelse(t  >  2022,  1  +  ramp(t, (p[239] -  1)  /  78,  2022,  2100),  1),  1) 
u[481] = u[496] * p[240]
u[477] = u[58] * (u[500] - u[503])  / (u[500] -  60) 
u[503] =  IfElse.ifelse( u[500] <  inits[:LE],  inits[:PA],  inits[:PA]  + p[241] * (u[500] + u[499] -  inits[:LE])) 
u[474] =  RT_PASS20[ORDER] 
u[476] =  RT_PASS40[ORDER] 
u[478] =  RT_PASS60[ORDER] 
u[534] = u[480] - u[484]
u[180] = u[55] + u[56] + u[57] + u[58]
u[535] = u[477] / u[433]
u[502] =  IfElse.ifelse(t  >  2022,  max(0,  1  + p[242] * (u[127] / p[162] -  1)),  1) 
u[536] = u[537] * u[100]
u[188] =  max(0, u[438] - p[247]) 
u[540] = u[188] / u[136]
u[541] = u[206] / u[136]
u[542] = u[47] / u[201]
u[543] =  IfElse.ifelse(t  >  2022,  max(0, p[249] *  (1  -  1  * (u[233] / p[248] -  1))),  0) 
u[463] = u[100] * u[544]
u[544] =  IfElse.ifelse(t  >  2022,  1  + p[250] * (u[127] / p[162] -  1),  1) 
u[545] = u[540] * p[251]
u[546] =  max(0,  1  + p[252] *  log( u[542] / p[253])  ) 
u[547] = u[548] / u[180]
u[549] = u[206] / u[180]
du[100] = u[536]
u[550] =  min(1,  1  + p[254] * (u[210] /  1  -  1)) 
u[537] = (u[538] +  0)  * u[550] + u[543]
du[101] = (u[545])
u[539] = u[548] / u[136]
u[551] = u[100] *  (1  - u[101]) 
u[548] = u[201] * u[546]
u[552] = p[255] +  ramp(t, (p[256] - p[255])  /  78,  2022,  2022  +  78) 
u[553] = exp(p[257]  +  log( u[225] / p[258])  ) 
u[554] =  1  + p[260] * (u[207] / p[259] -  1) 
u[555] =  max( p[262],  min(1,  1  + p[263] * (u[6] / p[261] -  1))) 
u[556] =  (0.5  * u[553] +  0.5  * u[558])  * u[554] * u[555] * u[557]
u[557] =  (1  + p[265] * (u[102] - p[264] ))  * u[559]
u[558] = exp(p[266]  +  log( u[549] / p[267])  ) 
u[560] =  WorldDynamics.interpolate( u[207] / p[268],  tables[:IEST],  ranges[:IEST]) 
u[138] =  IfElse.ifelse( p[270] >  0, p[269], u[104]) 
u[561] = p[271] * u[562] * u[563]
u[564] = u[565] * u[560]
du[102] = ( ( (u[556] - u[103]) / u[556] )  / p[272]) / p[272]
du[103] = (u[556]) / p[272]
u[566] = u[549] / u[233]
u[565] =  WorldDynamics.interpolate( u[566] / p[273],  tables[:PSESTR],  ranges[:PSESTR]) 
du[104] = (u[561]) / p[274]
u[567] =  1  + p[275] * (u[102] - p[276]) 
u[563] =  1  + p[277] * (u[567] /  inits[:STE]  -  1) 
u[562] =  1  + p[278] * (u[105] /  inits[:SOTR]  -  1) 
du[105] = (u[564]) / p[279]
u[559] =  1  + p[280] * (u[38] / p[281] -  1) 
